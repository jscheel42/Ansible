---

- name: install postgresql and psycopg2
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - "postgresql-{{ postgresql_version_major }}.{{ postgresql_version_minor }}"
    - "postgresql-client-{{ postgresql_version_major }}.{{ postgresql_version_minor }}"
    - python-psycopg2
  tags: postgresql

- name: setup postgresql config
  template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_dir_ubuntu }}/postgresql.conf"
  register: postgresql_config_update
  tags: postgresql

- name: setup pg_hba
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_dir_ubuntu }}/pg_hba.conf"
  register: postgresql_pg_hba_update
  tags: postgresql

- name: restart postgresql service if config changes are made
  service:
    name: postgresql #@{{ postgresql_version_major }}.{{ postgresql_version_minor }}-main.service
    state: restarted
  when: postgresql_config_update|changed or postgresql_pg_hba_update|changed
  tags: postgresql

- name: start postgresql service
  service:
    name: postgresql #@{{ postgresql_version_major }}.{{ postgresql_version_minor }}-main.service
    state: started
    enabled: yes
  tags: postgresql

- name: add postgresql admin users
  postgresql_user:
    name: "{{ item.name }}"
    role_attr_flags: "{{ item.perms }}"
    port: "{{ postgresql_port }}"
    password: "{{ item.password }}"
  with_items: "{{ postgresql_admins }}"
  when: postgresql_admins[0].name is defined
  # no_log: True # Don't want password showing in log, this module does not filter it for some reason
  tags: postgresql

- name: add postgresql users
  postgresql_user:
    name: "{{ item.name }}"
    role_attr_flags: "{{ item.perms }}"
    port: "{{ postgresql_port }}"
    password: "{{ item.password }}"
  with_items: "{{ postgresql_users }}"
  when: postgresql_users[0].name is defined
  # no_log: True # Don't want password showing in log, this module does not filter it for some reason
  tags: postgresql

- name: add postgresql databases
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
    login_user: postgres
    port: "{{ postgresql_port }}"
  with_items: "{{ postgresql_databases }}"
  when: postgresql_databases[0].name is defined
  tags: postgresql
